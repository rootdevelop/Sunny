@model Sunny.Services.Domain.Mission

@section scripts
{
    <script src="@Url.Content("~/Scripts/AddMedia.js")" type="text/javascript"></script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Mission</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text)
                @Html.ValidationMessageFor(model => model.Text)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags)
                @Html.ValidationMessageFor(model => model.Tags)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbnailUri, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThumbnailUri)
                @Html.ValidationMessageFor(model => model.ThumbnailUri)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUri, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUri)
                @Html.ValidationMessageFor(model => model.ImageUri)
            </div>
        </div>

        <fieldset>
            <legend>Medias</legend>
            @Html.Hidden(String.Format("RelationHelperViewModels[{0}].ViewModel.ListIndex", Model.MediaIds.Count), Model.MediaIds.Count)

            @for (int i = 0; i < Model.MediaIds.Count; i++)
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right"></label>
                    <div class="col-sm-9">
                        @Html.DropDownList(String.Format("MediaIds[{0}]", i), (IEnumerable<SelectListItem>)ViewBag.ListOfMedia, "-- Select --")
                        @Html.ValidationMessage(String.Format("MediaIds[{0}]", i))
                    </div>
                </div>
            }

            <button type="submit" name="action" id="AddMedia" class="btn btn-sm btn-success" onclick="javascript: addMediaRow(event);">
                <i class="icon-pencil"></i>
                Add Media
            </button>

        </fieldset>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
